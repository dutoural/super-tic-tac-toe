{"version":3,"sources":["Morpion.jsx","App.js","reportWebVitals.js","index.js"],"names":["socket","require","io","lastSymbol","lastPlay","morpion","pos","winner","joueur","mode1jGlob","mode2jGlob","Menu","props","switchMode","bind","state","mode1j","mode2j","nbJoueur","change","save","emit","this","setState","on","mode","modeG","className","onClick","onReset","text","checked","React","Component","Separateur","Button","TextInfo","message","Board","board","playable","morpionWin","renderMorpion","handleClick","playAdverse","lastPlaySave","reset","class","value","renderCase","msg","adverse","console","log","checkPlayable","changeText","updatePlayable","checkWin","cases","lines","i","length","a","b","c","resetDone","click","Case","Win","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0561b073.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst io = require(\"socket.io-client\");\r\n\r\nconst socket = io(\"http://82.65.94.94:8000\")\r\n//const socket = io(\"localhost:8000\")\r\nvar lastSymbol = \"O\"\r\nvar lastPlay = {morpion : null, pos: null, lastSymbol:null}\r\nvar winner = null;\r\nvar joueur = null;\r\n\r\nvar mode1jGlob = true;\r\nvar mode2jGlob = false;\r\n\r\nexport class Menu extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.switchMode = this.switchMode.bind(this);\r\n        this.state = ({\r\n            mode1j : true,\r\n            mode2j : false,\r\n        })\r\n    }\r\n\r\n    switchMode(nbJoueur,change,save){\r\n        if(lastPlay.morpion === null || save){\r\n            if(nbJoueur === 1){\r\n                mode1jGlob = true;\r\n                mode2jGlob = false;\r\n                if(change){socket.emit(\"mode\",1)}\r\n            }\r\n            else{\r\n                mode2jGlob = true;\r\n                mode1jGlob = false;\r\n                if(change){socket.emit(\"mode\",2)}\r\n            }\r\n            this.setState({\r\n                mode1j : mode1jGlob,\r\n                mode2j : mode2jGlob,\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        socket.on(\"mode\",(mode)=>{\r\n            this.switchMode(mode,false,false);\r\n        })\r\n\r\n        socket.on(\"save\",(save)=>{\r\n            this.switchMode(save.modeG,false,true)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"menu\">\r\n                <Button onClick={this.props.onReset} text=\"Reset\"/>\r\n                <Separateur />\r\n                <Button onClick={()=>this.switchMode(1,true,false)} checked={this.state.mode1j} text=\"1 joueur \"/>\r\n                <Button onClick={()=>this.switchMode(2,true,false)} checked={this.state.mode2j} text=\"2 joueurs \"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Separateur extends React.Component{\r\n\r\n    render(){\r\n        return(<div>\r\n            <br /><br />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass Button extends React.Component{\r\n\r\n    render(){\r\n        if(this.props.checked){\r\n            return(\r\n                <div>\r\n                <div onClick ={this.props.onClick} className=\"myButton unselectable\">{this.props.text}<i className=\"fas fa-check-circle\"></i></div>\r\n            </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div onClick ={this.props.onClick} className=\"myButton unselectable\">{this.props.text}</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class TextInfo extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            message : this.props.message\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <p className=\"textInfo unselectable\">{this.props.message}</p>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport class Board extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            message : \"Au joueur X de jouer\",\r\n            board : [\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n            ],\r\n            playable : [\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"]\r\n            ],\r\n            morpionWin : [null,null,null,null,null,null,null,null,null]\r\n        }\r\n        this.renderMorpion = this.renderMorpion.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        socket.on(\"click\",(playAdverse) =>{\r\n            this.handleClick(playAdverse.morpion,playAdverse.pos,true,false)\r\n        })\r\n\r\n        socket.on(\"saveSymbole\",()=>{\r\n            if(joueur !== null){\r\n                if(joueur === \"X\"){\r\n                    socket.emit(\"joueur\", \"O\");\r\n                }\r\n                else{\r\n                    socket.emit(\"joueur\", \"X\");\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on(\"joueur\",(lastSymbol) =>{\r\n            if(joueur === null){\r\n                joueur = lastSymbol;\r\n            }\r\n        })\r\n\r\n        socket.on(\"save\",(save)=>{\r\n            lastSymbol = save.lastPlaySave.lastSymbol;\r\n            if(lastSymbol === \"X\"){\r\n                lastSymbol = \"O\";\r\n            }\r\n            else{\r\n                lastSymbol = \"X\";\r\n            }\r\n            this.setState(save.save);\r\n            if(save.lastPlaySave.morpion !== null){\r\n                this.handleClick(save.lastPlaySave.morpion,save.lastPlaySave.pos,false,true)\r\n            }\r\n        })\r\n\r\n        socket.on(\"reset\",()=>{\r\n            this.reset();\r\n        })\r\n    }\r\n\r\n    renderCase(morpion, pos){\r\n            if(morpion === lastPlay.morpion && pos === lastPlay.pos){\r\n                return <Case class={this.state.playable[morpion][pos] + \" lastPlayed\"} value={this.state.board[morpion][pos]} onClick={()=>{this.handleClick(morpion,pos,false,false)}}/>\r\n            }\r\n            return <Case class={this.state.playable[morpion][pos]} value={this.state.board[morpion][pos]} onClick={()=>{this.handleClick(morpion,pos,false,false)}}/>\r\n    }\r\n\r\n    renderMorpion(morpion){\r\n        if(this.state.morpionWin[morpion] != null){\r\n            if(morpion === lastPlay.morpion){\r\n                return(\r\n                    <div className=\"morpionGagne lastPlayed\">\r\n                        {this.state.morpionWin[morpion]}\r\n                    </div>\r\n                )\r\n            }\r\n            return(\r\n                <div className=\"morpionGagne\">\r\n                    {this.state.morpionWin[morpion]}\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"Morpion\">\r\n                    {this.renderCase(morpion,0)}\r\n                    {this.renderCase(morpion,1)}\r\n                    {this.renderCase(morpion,2)}\r\n                    {this.renderCase(morpion,3)}\r\n                    {this.renderCase(morpion,4)}\r\n                    {this.renderCase(morpion,5)}\r\n                    {this.renderCase(morpion,6)}\r\n                    {this.renderCase(morpion,7)}\r\n                    {this.renderCase(morpion,8)}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    changeText(msg){\r\n        this.setState({\r\n            message : msg\r\n        })\r\n    }\r\n\r\n    handleClick(morpion,pos,adverse,save){\r\n        console.log(joueur,mode2jGlob)\r\n        if(joueur === null && mode2jGlob){\r\n            socket.emit(\"joueur\", lastSymbol);\r\n            if(lastSymbol === \"O\"){\r\n                joueur = \"X\";\r\n            }\r\n            else{\r\n                joueur = \"O\";\r\n            }\r\n        }\r\n        if((this.checkPlayable(morpion,pos) && (joueur !== lastSymbol || adverse || mode1jGlob)) || save){\r\n            if(lastSymbol === \"O\"){\r\n                lastSymbol =\"X\";\r\n                const board = this.state.board;\r\n                board[morpion][pos] = \"X\"\r\n                this.setState({\r\n                    board : board,\r\n                })\r\n                this.changeText(\"Au joueur O de jouer\")\r\n            }\r\n            else{\r\n                lastSymbol =\"O\";\r\n                const board = this.state.board;\r\n                board[morpion][pos] = \"O\"\r\n                this.setState({\r\n                    board : board,\r\n                })\r\n                this.changeText(\"Au joueur X de jouer\")\r\n            }\r\n            lastPlay = {morpion,pos,lastSymbol}\r\n            if(!adverse){\r\n                socket.emit(\"click\", lastPlay)\r\n                socket.emit(\"save\",this.state)\r\n            }\r\n            this.updatePlayable()\r\n            const morpionWin = this.state.morpionWin;\r\n            morpionWin[morpion] = this.checkWin(this.state.board[morpion]);\r\n            this.setState({\r\n                morpionWin : morpionWin\r\n            });\r\n            winner = this.checkWin(this.state.morpionWin);\r\n            if(winner !== null){\r\n                this.changeText(`Le joueur ${lastSymbol} a gagné !!!`)\r\n            }\r\n        }\r\n    }\r\n\r\n    checkWin(cases){\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n          ];\r\n          for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (cases[a] && cases[a] === cases[b] && cases[a] === cases[c]) {\r\n                return cases[a];\r\n            }\r\n          }\r\n          return null;\r\n    }\r\n\r\n    updatePlayable(){\r\n        for (let morpion = 0; morpion < this.state.board.length; morpion++) {\r\n            for (let pos = 0; pos < this.state.board[morpion].length; pos++) {\r\n                if(this.checkPlayable(morpion,pos)){\r\n                    const playable = this.state.playable;\r\n                    playable[morpion][pos] = \"playable\"\r\n                    this.setState({\r\n                        playable : playable\r\n                    })\r\n                }\r\n                else{\r\n                    const playable = this.state.playable;\r\n                    playable[morpion][pos] = \"\"\r\n                    this.setState({\r\n                        playable : playable\r\n                    })\r\n                }              \r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    reset(){\r\n        winner = null;\r\n        lastSymbol = \"O\";\r\n        lastPlay = {morpion : null, pos: null};\r\n        joueur = null;\r\n        this.setState({\r\n            message : \"Au joueur X de jouer\",\r\n            board : [\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n                [null,null,null,null,null,null,null,null,null],\r\n            ],\r\n            morpionWin : [null,null,null,null,null,null,null,null,null],\r\n            playable : [\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"],\r\n                [\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\",\"playable\"]\r\n            ]\r\n        })\r\n    }\r\n\r\n    checkPlayable(morpion,pos){\r\n        if(winner !== null){ // Si il y a un gagnant on empeche\r\n            return false;\r\n        }\r\n        if(lastPlay.morpion === null){ // Si premiere fois qu'on joue\r\n            return true;\r\n        }\r\n        if(this.state.morpionWin[lastPlay.pos] !== null && this.state.board[morpion][pos] === null){ // Si on nous force à jouer sur un morpion déjà win\r\n            return true;\r\n        }\r\n        if(lastPlay.pos !== morpion){ // Si on essaye de jouer autre part que sur la case forcée \r\n            return false\r\n        }\r\n        if(this.state.board[morpion][pos] !== null){ // SI on essaye de jouer sur une case déjà prise\r\n            return false\r\n        } \r\n        return true\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.reset){\r\n            this.props.resetDone();\r\n            this.reset()\r\n            socket.emit(\"reset\");\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <TextInfo message = {this.state.message}/>\r\n                <div className=\"Board\">\r\n                {this.renderMorpion(0)}\r\n                {this.renderMorpion(1)}\r\n                {this.renderMorpion(2)}\r\n                {this.renderMorpion(3)}\r\n                {this.renderMorpion(4)}\r\n                {this.renderMorpion(5)}\r\n                {this.renderMorpion(6)}\r\n                {this.renderMorpion(7)}\r\n                {this.renderMorpion(8)}\r\n                {winner != null ? <Win click={()=>{this.reset()}} winner={winner}/> : null}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport class Case extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className={\"case \" + this.props.class} onClick={this.props.onClick}>\r\n                {this.props.value}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Win extends React.Component{\r\n\r\n    render(){\r\n        return <div className=\"Win\">\r\n            Le joueur {this.props.winner} a gagné !\r\n            <img src=\"https://cdn.pixabay.com/photo/2017/01/28/11/43/cup-2015198_960_720.png\" alt=\"Trophée\"/>\r\n            <button onClick={this.props.click}>Rejouer<i className=\"fa fa-refresh fa-spin fa-1x fa-fw\"></i></button>\r\n        </div>\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {Board,Menu} from './Morpion';\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state ={\n      reset : false,\n    }\n    this.reset = this.reset.bind(this);\n  }\n\n  reset(){\n    this.setState({\n      reset : true,\n    })\n  }\n\n  resetDone(){\n    this.setState({\n      reset : false,\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Board reset = {this.state.reset} resetDone = {()=>this.resetDone()}/>\n        <Menu onReset = {()=>this.reset()}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}